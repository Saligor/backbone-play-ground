{"version":3,"sources":["main.js"],"names":["$","gen","Loader","components","view","model","collection","viewsInstances","tempCollection","init","_","each","component","attr","views","undefined","push","el","models","find","dataLoader","collections","dataLoaderCollection","name","console","error","XYL","object","Error","viewInstances","window","loader","jQuery"],"mappings":";;AAAA;;;;;;AAMA,CAAC,UAAUA,CAAV,EAAaC,GAAb,EAAiB;AACd;;AAEA;;;;;;AAMA,QAAIC,SAAS,SAATA,MAAS,GAAY;AACrB,YAAIC,aAAa,IAAjB;AACA,YAAIC,OAAO,EAAX;AACA,YAAIC,QAAQ,EAAZ;AACA,YAAIC,aAAa,EAAjB;AACA,YAAIC,iBAAiB,EAArB;AACA,YAAIC,iBAAiB,IAArB;;AAEA;;;AAGA,YAAIC,OAAO,SAAPA,IAAO,GAAY;;AAEnBN,yBAAaH,EAAE,aAAF,CAAb;;AAEAU,cAAEC,IAAF,CAAOR,UAAP,EAAmB,UAAUS,SAAV,EAAqB;AACpCR,uBAAOJ,EAAEY,SAAF,EAAaC,IAAb,CAAkB,WAAlB,CAAP;AACAR,wBAAQL,EAAEY,SAAF,EAAaC,IAAb,CAAkB,YAAlB,CAAR;AACAP,6BAAaN,EAAEY,SAAF,EAAaC,IAAb,CAAkB,iBAAlB,CAAb;;AAEA,oBAAIZ,IAAIa,KAAJ,CAAUV,IAAV,MAAoBW,SAAxB,EAAmC;;AAE/B,wBAAIT,eAAeS,SAAnB,EAA8B;AAC1BR,uCAAeS,IAAf,CAAoB,IAAIf,IAAIa,KAAJ,CAAUV,IAAV,CAAJ,CAAoB;AACpCa,gCAAIjB,EAAEY,SAAF,CADgC;AAEpCP,mCAAOJ,IAAIiB,MAAJ,CAAWb,KAAX,MAAsBU,SAAtB,GAAkC,IAAId,IAAIiB,MAAJ,CAAWb,KAAX,CAAJ,EAAlC,GAA4D;AAF/B,yBAApB,CAApB;AAIH,qBALD,MAKO;AACHG,yCAAiBE,EAAES,IAAF,CAAOlB,IAAImB,UAAJ,CAAeC,WAAtB,EAAmC,UAACC,oBAAD,EAA0B;AAC1E,mCAAOA,qBAAqBC,IAArB,KAA8BjB,UAArC;AACH,yBAFgB,CAAjB;;AAIA,4BAAI,CAACE,cAAL,EAAqB;AACjBgB,oCAAQC,KAAR,CAAc,uDAAuDnB,UAAvD,GACV,4EADJ,EACkFL,IAAImB,UAAJ,CAAeC,WADjG;AAEH;;AAEDd,uCAAeS,IAAf,CAAoB,IAAIU,IAAIZ,KAAJ,CAAUV,IAAV,CAAJ,CAAoB;AACpCa,gCAAIjB,EAAEY,SAAF,CADgC;AAEpCN,wCAAYE,eAAemB;AAFS,yBAApB,CAApB;AAIH;AAEJ,iBAvBD,MAuBO;AACH,0BAAM,IAAIC,KAAJ,CAAU,uBAAuBxB,IAAjC,CAAN;AACH;AAEJ,aAhCD;AAiCH,SArCD;;AAuCA;AACA,eAAO;AACHK,kBAAMA,IADH;AAEHoB,2BAAetB;AAFZ,SAAP;AAIH,KAvDD;;AAyDA;AACAuB,WAAOC,MAAP,GAAgB,IAAI7B,MAAJ,EAAhB;AACA4B,WAAOC,MAAP,CAActB,IAAd;AAEH,CAtED,EAsEGuB,MAtEH,EAsEW/B,GAtEX","file":"main.js","sourcesContent":["/**\n * @Filename: app.js\n * @Author: Casper Rasmussen\n * @Author: Salvatore Randazzo\n */\n\n(function ($, gen){\n    'use strict';\n\n    /**\n     * Loader\n     * @returns {{init: Function}}\n     * @constructor\n     */\n\n    var Loader = function () {\n        var components = null;\n        var view = '';\n        var model = '';\n        var collection = '';\n        var viewsInstances = [];\n        var tempCollection = null;\n\n        /**\n         * Initializer\n         */\n        var init = function () {\n\n            components = $('[data-view]');\n\n            _.each(components, function (component) {\n                view = $(component).attr('data-view');\n                model = $(component).attr('data-model');\n                collection = $(component).attr('data-collection');\n\n                if (gen.views[view] !== undefined) {\n\n                    if (collection === undefined) {\n                        viewsInstances.push(new gen.views[view]({\n                            el: $(component),\n                            model: gen.models[model] !== undefined ? new gen.models[model]() : null\n                        }));\n                    } else {\n                        tempCollection = _.find(gen.dataLoader.collections, (dataLoaderCollection) => {\n                            return dataLoaderCollection.name === collection;\n                        });\n\n                        if (!tempCollection) {\n                            console.error('Probably caused by not found collection with name ' + collection +\n                                ' please check that the name matches an actual package. Available packages:', gen.dataLoader.collections);\n                        }\n\n                        viewsInstances.push(new XYL.views[view]({\n                            el: $(component),\n                            collection: tempCollection.object\n                        }));\n                    }\n\n                } else {\n                    throw new Error('No view found for ' + view);\n                }\n\n            });\n        };\n\n        // Public\n        return {\n            init: init,\n            viewInstances: viewsInstances\n        };\n    };\n\n    // Starting the application\n    window.loader = new Loader();\n    window.loader.init();\n\n})(jQuery, gen);\n"]}